// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  email String @unique
  name String 
  password String
  photo String?
  rooms Room[]
//a user can have multiple rooms but and a room can have one admin id (one to many relationship!)4
  chats Chat[]
}


model Room {
  id Int @id @default(autoincrement())
  slug String @unique
  createdAt DateTime @default(now())
  adminId String
  admin User @relation(fields: [adminId], references: [id])
  chats Chat[]
}

model Chat {
  id Int @id @default(autoincrement())
  roomId Int
  message String //now this will look like {type: "rect", x: 1, y: 1, w: 10, h: 10}
  //but its a good idea to make a seperate strict schema that enforces constraint!
  userId String
  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
